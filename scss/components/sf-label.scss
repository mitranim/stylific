/**
 * Enhanced version of form labels. Intended usage:
 *
 *   <label class="sf-label">
 *     <span>Email</span>
 *     <input type="email">
 *   </label>
 *
 *   <label class="sf-label sf-label-row">
 *     <span>Name</span>
 *     <input type="text">
 *   </label>
 */

/**
 * TODO.
 *
 * Row version with a hard-set height (still adaptive to font size). Could be
 * useful for avoiding jumping button height when button content is changed
 * dynamically. Need to review.
 */

@use 'sass:math';

.sf-label, [class*=sf-label] {

  /**
   * Default version: vertical.
   */
  // Layout.
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  // Whitespace.
  > * {margin-bottom: math.div($sf-space, 2)}
  > :last-child {margin-bottom: 0}

  /**
   * Row version: horizontal.
   */
  &.sf-label-row {
    // Layout.
    flex-direction: row;
    align-items: stretch;
    > * {
      // Center text in immediate children.
      display: flex;
      flex-direction: row;
      align-items: center;
      // If the child is inline-block, center it the old way. This might handle
      // the case where the child has fixed dimensions and can't be stretched.
      vertical-align: middle;
      // Whitespace.
      margin-right: math.div($sf-space, 2);
      &:last-child {margin-right: 0}
      // Override the space from the vertical version.
      margin-top: 0;
      margin-bottom: 0;
    }
  }

  // Dense version for tightly grouped inputs and buttons. Squishes intermediate
  // whitespace and negates adjacent borders. Best used with flat buttons:
  // <button class="sf-button-flat">.
  &.sf-label-dense {
    // Row version.
    &.sf-label-row {
      > :not(:last-child) {
        margin-right: 0;
        border-right: none;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
      > :not(:first-child) {
        margin-left: 0;
        border-left: none;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
    // Column version.
    &:not(.sf-label-row) {
      > :not(:last-child) {
        margin-bottom: 0;
        border-bottom: none;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
      > :not(:first-child) {
        margin-top: 0;
        border-top: none;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    }
  }
}
